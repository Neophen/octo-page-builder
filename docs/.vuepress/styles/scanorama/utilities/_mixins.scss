@mixin fluid-type($properties, $min-screen, $max-screen, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-screen) {
      @each $property in $properties {
        #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);
      }
    }

    @media screen and (min-width: $max-screen) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

// Requires the calc-interpolation function which can also be used independently

@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {
  $a: ($max-value - $min-value) / ($max-screen - $min-screen);
  $b: $min-value - $a * $min-screen;

  $sign: "+";
  @if ($b < 0) {
    $sign: "-";
    $b: abs($b);
  }
  @return calc(#{$a * 100}vw #{$sign} #{$b});
}

/* mixin for multiline */
@mixin maxLines($lineHeight: 1.2em, $lineCount: 1, $bgColor: white) {
  overflow: hidden;
  line-height: $lineHeight;
  max-height: $lineHeight * $lineCount;
  height: $lineHeight * $lineCount;
}

@mixin scanorama-btn($color, $activeColor) {
  &::after {
    content: " ";
    position: absolute;
    right: 0;
    bottom: 0;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 0 8px 8px;
    border-color: transparent transparent $color transparent;
    margin: 5px;
  }

  &:active {
    &::after {
      border-color: transparent transparent $activeColor transparent;
    }
  }
}

@mixin oct-transition-all {
  transition: all 0.3s ease-in-out;
}
